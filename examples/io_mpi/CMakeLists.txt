file(GLOB files_test io_test.f90)
file(GLOB files_read io_read.f90)
file(GLOB files_var_test io_var_test.f90)
file(GLOB files_plane_test io_plane_test.f90)
file(GLOB files_bench io_bench.f90)
file(GLOB files_visu io_visu.f90)
file(GLOB files_mpi_non_blocking io_mpi_non_blocking.f90)

include_directories(${CMAKE_SOURCE_DIR}/src)

if (COMPLEX_TESTS)
  add_compile_definitions(COMPLEX_TESTS)
endif (COMPLEX_TESTS)

add_executable(io_test ${files_test})
add_executable(io_read ${files_read})
add_executable(io_var_test ${files_var_test})
add_executable(io_plane_test ${files_plane_test})
add_executable(io_bench ${files_bench})
add_executable(io_visu ${files_visu})
add_executable(io_mpi_non_blocking ${files_mpi_non_blocking})

target_link_libraries(io_test PRIVATE decomp2d examples_utils)
target_link_libraries(io_read PRIVATE decomp2d examples_utils)
target_link_libraries(io_var_test PRIVATE decomp2d examples_utils)
target_link_libraries(io_plane_test PRIVATE decomp2d examples_utils)
target_link_libraries(io_bench PRIVATE decomp2d examples_utils)
target_link_libraries(io_visu PRIVATE decomp2d examples_utils)
target_link_libraries(io_mpi_non_blocking PRIVATE decomp2d examples_utils)

# Run the test(s)
# Note visu is not a test - it is an example to show/create visu files
set(run_dir "${test_dir}/io_test")
message(STATUS "Example dir ${run_dir}")
file(MAKE_DIRECTORY ${run_dir})
if (IO_BACKEND MATCHES "adios2")
  file (COPY "${CMAKE_SOURCE_DIR}/examples/io_adios/adios2_config.xml" DESTINATION ${run_dir})
endif (IO_BACKEND MATCHES "adios2")
if (BUILD_TARGET MATCHES "gpu")
  file(COPY bind.sh DESTINATION ${run_dir})
  add_test(NAME io_test COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} ./bind.sh $<TARGET_FILE:io_test> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
  add_test(NAME io_read COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} ./bind.sh $<TARGET_FILE:io_read> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
else ()
  add_test(NAME io_test COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} $<TARGET_FILE:io_test> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
  add_test(NAME io_read COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} $<TARGET_FILE:io_read> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
endif ()
# Run the test(s)
set(run_dir "${test_dir}/io_var_test")
message(STATUS "Example dir ${run_dir}")
file(MAKE_DIRECTORY ${run_dir})
if (IO_BACKEND MATCHES "adios2")
  file (COPY "${CMAKE_SOURCE_DIR}/examples/io_adios/adios2_config.xml" DESTINATION ${run_dir})
endif (IO_BACKEND MATCHES "adios2")
if (BUILD_TARGET MATCHES "gpu")
  file(COPY bind.sh DESTINATION ${run_dir})
  add_test(NAME io_var_test COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} ./bind.sh $<TARGET_FILE:io_var_test> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
else ()
  add_test(NAME io_var_test COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} $<TARGET_FILE:io_var_test> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
endif ()
# Run the test(s)
set(run_dir "${test_dir}/io_plane_test")
message(STATUS "Example dir ${run_dir}")
file(MAKE_DIRECTORY ${run_dir})
if (IO_BACKEND MATCHES "adios2")
  file (COPY "${CMAKE_SOURCE_DIR}/examples/io_adios/adios2_config.xml" DESTINATION ${run_dir})
endif (IO_BACKEND MATCHES "adios2")
if (BUILD_TARGET MATCHES "gpu")
  file(COPY bind.sh DESTINATION ${run_dir})
  add_test(NAME io_plane_test COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} ./bind.sh $<TARGET_FILE:io_plane_test> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
else ()
  add_test(NAME io_plane_test COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} $<TARGET_FILE:io_plane_test> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
endif ()
# Run the test(s)
set(run_dir "${test_dir}/io_bench")
message(STATUS "Example dir ${run_dir}")
file(MAKE_DIRECTORY ${run_dir})
if (IO_BACKEND MATCHES "adios2")
  file (COPY "${CMAKE_SOURCE_DIR}/examples/io_adios/adios2_config.xml" DESTINATION ${run_dir})
endif (IO_BACKEND MATCHES "adios2")
if (BUILD_TARGET MATCHES "gpu")
  file(COPY bind.sh DESTINATION ${run_dir})
  add_test(NAME io_bench COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} ./bind.sh $<TARGET_FILE:io_bench> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
else ()
  add_test(NAME io_bench COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} $<TARGET_FILE:io_bench> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
endif ()
# Run the test(s)
set(run_dir "${test_dir}/io_visu")
message(STATUS "Example dir ${run_dir}")
file(MAKE_DIRECTORY ${run_dir})
if (IO_BACKEND MATCHES "adios2")
  file (COPY "${CMAKE_SOURCE_DIR}/examples/io_adios/adios2_config.xml" DESTINATION ${run_dir})
endif (IO_BACKEND MATCHES "adios2")
if (BUILD_TARGET MATCHES "gpu")
  file(COPY bind.sh DESTINATION ${run_dir})
  add_test(NAME io_visu COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} ./bind.sh $<TARGET_FILE:io_visu> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
else ()
  add_test(NAME io_visu COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} $<TARGET_FILE:io_visu> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
endif ()
# Run the test(s)
set(run_dir "${test_dir}/io_mpi_non_blocking")
message(STATUS "Example dir ${run_dir}")
file(MAKE_DIRECTORY ${run_dir})
if (IO_BACKEND MATCHES "adios2")
  file (COPY "${CMAKE_SOURCE_DIR}/examples/io_adios/adios2_config.xml" DESTINATION ${run_dir})
endif (IO_BACKEND MATCHES "adios2")
if (BUILD_TARGET MATCHES "gpu")
  file(COPY bind.sh DESTINATION ${run_dir})
  add_test(NAME io_mpi_non_blocking COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} ./bind.sh $<TARGET_FILE:io_mpi_non_blocking> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
else ()
  add_test(NAME io_mpi_non_blocking COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} $<TARGET_FILE:io_mpi_non_blocking> ${TEST_ARGUMENTS} WORKING_DIRECTORY ${run_dir})
endif ()
