# This is a basic workflow to help you get started with Actions
name: FullCI4PR_nvhpc_double

defaults:
  run:
    shell: bash 

# Controls when the action will run. Triggers the workflow on pull request
# events but only for the master branch
on: [pull_request, fork]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a job called "bld_gnu_ompi"
  Full_CI_NVHPC_double:
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux, x64]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
      with: 
        clean: true

    # Configure-Build-Run-Run on 4 cores 
    - name: Compile NHVHPC CPU
      run: |
        ls -ltr ~/.bashrc
        source /etc/profile.d/lmod.sh
        source ~/.bash_aliases
        module load nvhpc
        export FC=mpif90
        cmake -S . -B build -DBUILD_TESTING=ON
        cmake -S . -B build -DNX=128 -DNY=128 -DNX=128 -DMPIEXEC_MAX_NUMPROCS=4
        cmake --build build -j 4
        cmake --install build 
        ctest --test-dir build --output-on-failure
        rm -rf build  
    
    # Run and Compile NHHPC for CPU with ADIOS2
    # Need to fix issue with latest NVHPC and ADIOS
    # Need to revert to 23.1
    - name: Compile NHVHPC CPU & ADIOS2
      run: |
        ls -ltr ~/.bashrc
        source /etc/profile.d/lmod.sh
        source ~/.bash_aliases
        module load nvhpc
        export FC=mpif90
        export CC=mpicc
        export CXX=mpicxx
        cmake -S . -B build -DBUILD_TESTING=ON -DIO_BACKEND=adios2 -Dadios2_DIR=~/GIT/ADIOS2/build/build_nvhpc241/opt/lib/cmake/adios2
        cmake -S . -B build -DNX=128 -DNY=128 -DNX=128 -DMPIEXEC_MAX_NUMPROCS=4
        cmake --build build -j 4
        cmake --install build
        ctest --test-dir build --output-on-failure
        rm -rf build  
    
    # Configure-Build-Run-Run on 4 cores 
    - name: Compile NHVHPC GPU cuMPI
      run: |
        ls -ltr ~/.bashrc
        source /etc/profile.d/lmod.sh
        source ~/.bash_aliases
        module load nvhpc
        export FC=mpif90
        cmake -S . -B build -DBUILD_TESTING=ON -DBUILD_TARGET=gpu -DENABLE_NCCL=no -DNX=128 -DNY=128 -DNX=128
        cmake --build build -j 4
        cmake --install build 
        ctest --test-dir build --output-on-failure
        rm -rf build  

    # Configure-Build-Run-Run
    - name: Compile NHVHPC GPU cuMPI inplace
      run: |
        ls -ltr ~/.bashrc
        source /etc/profile.d/lmod.sh
        source ~/.bash_aliases
        module load nvhpc
        export FC=mpif90
        cmake -S . -B build -DBUILD_TESTING=ON -DBUILD_TARGET=gpu -DENABLE_NCCL=no -DENABLE_INPLACE=ON -DNX=128 -DNY=128 -DNX=128
        cmake --build build -j 4
        cmake --install build 
        ctest --test-dir build --output-on-failure
        rm -rf build

    # Configure-Build-Run 
    - name: Compile NHVHPC GPU NCCL
      run: |
        ls -ltr ~/.bashrc
        source /etc/profile.d/lmod.sh
        source ~/.bash_aliases
        module load nvhpc
        export FC=mpif90
        cmake -S . -B build -DBUILD_TESTING=ON -DBUILD_TARGET=gpu -DENABLE_NCCL=yes -DNX=128 -DNY=128 -DNX=128
        cmake --build build -j 4
        cmake --install build 
        ctest --test-dir build --output-on-failure
        rm -rf build  
    
    # Configure-Build-Run 
    - name: Compile NHVHPC GPU NCCL MemManag
      run: |
        ls -ltr ~/.bashrc
        source /etc/profile.d/lmod.sh
        source ~/.bash_aliases
        module load nvhpc
        export FC=mpif90
        cmake -S . -B build -DBUILD_TESTING=ON -DBUILD_TARGET=gpu -DENABLE_NCCL=yes -DENABLE_MANAGED=yes -DNX=128 -DNY=128 -DNX=128
        cmake --build build -j 4
        cmake --install build 
        ctest --test-dir build --output-on-failure
        rm -rf build
